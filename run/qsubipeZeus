#!/bin/csh
#
set queue_time=00:20:00
if ( $#argv == 0 ) then
  set par = "serial"
  set compute_tasks = 1
  set name = ipe_S
else if ( $#argv < 3 ) then
  if ( $1 == 'S' ) then
    set par = "serial"
    set compute_tasks = 1
    set name = ipe_S
  else
    set par = "parallel"
    set compute_tasks = $1
    set name = ipe_${compute_tasks}
  endif
  if ( $#argv == 2 ) then
    set queue_time = $2
  endif
else
  echo 'Too many arguments'
  exit
endif
if ( $compute_tasks < 2) then
# Need at least 2 run tasks to provide enough memory.
  set run_tasks = 2
else
  set run_tasks = $compute_tasks
endif
set  rundir = "${name}_${$}"
mkdir $rundir
echo Created $rundir
cd  $rundir
if ( $par == 'parallel' ) then
  cp ../../bin/ipe_v18.ifortsms.exe .
else
  cp ../../bin/ipe_v18.ifort.exe .
endif
cp ../coef*                    .
cp ../GPTLnamelist             .
cp ../SMSnamelist              .
cp ../IPE.inp                  .
cp ../wei96.cofcnts            .
cp ../stup_ut_rec              .
cp ../qsubipeZeus              .
cp ../load_balance_groups1     .

#20140123 set DATADIR="/scratch2/portfolios/BMC/acb/IPEdata/IPEdata"
set DATADIR="/scratch1/portfolios/NCEPDEV/swpc/noscrub/Naomi.Maruyama/IPEdata/data"

# Allow the test suite to override the data-files location.

if ( $?IPEDATA ) then
  set DATADIR="$IPEDATA"
endif
  
ln -s $DATADIR/* .

# Make rundir a full path for runscript
set rundir = $cwd

cat << EOF >! runscript
#!/bin/csh
  cd $rundir
  pwd
  limit
  module purge
  module load intel
#The following setenv commands are to fix the warning:
# MPI WARNING: Could not allocate an internal buffer in the last 30 seconds
# on rank 1.  Try increasing MPI_BUFS_PER_PROC and/or MPI_BUFS_PER_HOST.
# And speed up the initialization.
  setenv MPI_BUFS_PER_HOST 2048
  setenv MPI_BUFS_PER_PROC 256
  cat /proc/cpuinfo
  if ($par == 'parallel') then
    module load mpt
    set cmd = "time mpiexec_mpt -np $compute_tasks ./ipe_v18.ifortsms.exe"
  else
    set cmd = "time ./ipe_v18.ifort.exe"
  endif
  module list
  echo "running \$cmd" > output
  (\$cmd) >> output

if (\$status != 0) then
  echo ipe failed
  exit 23
else
  echo ipe finished
endif
exit 0
EOF

chmod 755 ./runscript

set QUEUE="batch"

# Allow the test suite to override the batch queue.

if ( $?IPEQUEUE ) then
  set QUEUE="$IPEQUEUE"
endif

set jobid=`qsub -N $name -A gm -q $QUEUE -l procs=$run_tasks -l walltime=$queue_time -j oe ./runscript`

if ( $status != 0 ) then
  echo "qsub failed"
  exit 1
endif

if ( "$jobid" == "" ) then
  echo "Failed to get job ID"
  exit 1
endif
  
echo "The job $jobid has been submitted."

exit 0
