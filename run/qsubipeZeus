#!/bin/csh
#
if ( $#argv == 0) then
  set par = "serial"
  set compute_tasks = 1
# Need at least 2 run tasks to provide enough memory.
  set run_tasks = 2
  set name = ipe_S
else 
  set par = "parallel"
  set compute_tasks = $1
  set name = ipe_${compute_tasks}
  set run_tasks = $compute_tasks
  if ( $compute_tasks < 2) then
# Need at least 2 run tasks to provide enough memory.
    set run_tasks = 2
  endif
endif
set  rundir = "${name}_${$}"
mkdir $rundir
echo Created $rundir
cd  $rundir
if ( $par == 'parallel' ) then
  cp ../../bin/ipe_v18.ifortsms.exe .
else
  cp ../../bin/ipe_v18.ifort.exe .
endif
cp ../coef*                    .
cp ../GPTLnamelist             .
cp ../SMSnamelist              .
cp ../IPE.inp                  .
cp ../wei96.cofcnts            .
cp ../stup_ut_rec              .
cp ../qsubipeZeus               .
cp ../load_balance_groups1     .
ln -s /scratch2/portfolios/BMC/acb/IPEdata/* .

# Make rundir a full path for runscript
set rundir = $cwd

cat << EOF >! runscript
#!/bin/csh
  cd $rundir
  pwd
  limit
  module purge
  module load intel
  cat /proc/cpuinfo
  if ($par == 'parallel') then
    module load mvapich2
    set cmd = "time mpiexec -np $compute_tasks ./ipe_v18.ifortsms.exe"
  else
    set cmd = "time ./ipe_v18.ifort.exe"
  endif
  module list
  echo "running \$cmd" > output
  (\$cmd) >> output

if (\$status != 0) then
  echo ipe failed
  exit 23
else
  echo ipe finished
endif
exit 0
EOF

chmod 755 ./runscript
set queue_time=00:30:00

qsub -N $name \
     -A acb-gpu \
     -q batch \
     -l partition=sjet \
#    -l partition=tgpu \
#    -l nodes=1:ppn=2 \
     -l procs=$run_tasks \
     -l walltime=$queue_time \
     ./runscript || echo "qsub failed" && exit 1

exit 0


