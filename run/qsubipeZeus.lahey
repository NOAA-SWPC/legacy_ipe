#!/bin/csh
#
if ( $#argv == 0 ) then
  set par = "serial"
  set compute_tasks = 1
# Need at least 2 run tasks to provide enough memory.
  set run_tasks = 2
  set name = ipe_L
else
  set par = "parallel"
  set compute_tasks = $1
  set name = ipe_${compute_tasks}
  set run_tasks = $compute_tasks
  if ( $compute_tasks < 2) then
# Need at least 2 run tasks to provide enough memory.
    set run_tasks = 2
  endif
endif
set  rundir = "${name}_${$}"
mkdir $rundir
echo Created $rundir
cd  $rundir
if ( $par == 'parallel' ) then
  cp ../../bin/ipe_v18.lf95sms.exe .
else
  cp ../../bin/ipe_v18.lf95.exe .
endif
cp ../coef*                    .
cp ../GPTLnamelist             .
cp ../SMSnamelist              .
cp ../IPE.inp.lahey            IPE.inp
cp ../wei96.cofcnts            .
cp ../stup_ut_rec              .
cp ../qsubipeZeus.lahey        .
cp ../load_balance_groups1     .

# Allow the test suite to override the location of data files via environment
# variable IPEDATA. If present in the environment, IPEDATA will specify the
# location of the test suite's canned data archive; otherwise, the default path
# will be used.

if ( $?IPEDATA ) then
  set DATADIR="$IPEDATA"
else
  set DATADIR="/scratch2/portfolios/BMC/acb/IPEdata/IPEdata"
endif
  
ln -s $DATADIR/* .

# Make rundir a full path for runscript
set rundir = $cwd

cat << EOF >! runscript
#!/bin/csh
  cd $rundir
  pwd
  limit
  module purge
  module load lahey
#The following setenv commands are to fix the warning:
# MPI WARNING: Could not allocate an internal buffer in the last 30 seconds
# on rank 1.  Try increasing MPI_BUFS_PER_PROC and/or MPI_BUFS_PER_HOST.
# And speed up the initialization.
  setenv MPI_BUFS_PER_HOST 1024
  setenv MPI_BUFS_PER_PROC 128
  cat /proc/cpuinfo
  if ($par == 'parallel') then
    module load mpt
    set cmd = "time mpiexec_mpt -np $compute_tasks ./ipe_v18.lf95sms.exe"
  else
    set cmd = "time ./ipe_v18.lf95.exe"
  endif
  module list
  echo "running \$cmd" > output
  (\$cmd) >> output

if (\$status != 0) then
  echo ipe failed
  exit 23
else
  echo ipe finished
endif
exit 0
EOF

chmod 755 ./runscript
set queue_time=00:30:00

set QUEUE="batch"

# Allow the test suite to override the batch queue.

if ( $?IPEQUEUE ) then
  set QUEUE="$IPEQUEUE"
endif

set jobid=`qsub -N $name -A nim -q $QUEUE -l procs=$run_tasks -l walltime=$queue_time -j oe ./runscript`

if ( $status != 0 ) then
  echo "qsub failed"
  exit 1
endif

if ( "$jobid" == "" ) then
  echo "Failed to get job ID"
  exit 1
endif
  
echo "The job $jobid has been submitted."

exit 0
